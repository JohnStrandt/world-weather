[{"/Users/johnstrandt/Dev/weather-app/src/index.js":"1","/Users/johnstrandt/Dev/weather-app/src/reportWebVitals.js":"2","/Users/johnstrandt/Dev/weather-app/src/App.js":"3","/Users/johnstrandt/Dev/weather-app/src/components/CurrentWeather.js":"4","/Users/johnstrandt/Dev/weather-app/src/components/Forecast.js":"5","/Users/johnstrandt/Dev/weather-app/src/pages/Home.js":"6","/Users/johnstrandt/Dev/weather-app/src/components/Nav.js":"7","/Users/johnstrandt/Dev/weather-app/src/actions/weatherAction.js":"8","/Users/johnstrandt/Dev/weather-app/src/api.js":"9","/Users/johnstrandt/Dev/weather-app/src/reducers/weatherReducer.js":"10","/Users/johnstrandt/Dev/weather-app/src/util/time.js":"11","/Users/johnstrandt/Dev/weather-app/src/components/GlobalStyles.js":"12","/Users/johnstrandt/Dev/weather-app/src/components/DaySummary.js":"13"},{"size":974,"mtime":1611026195781,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1611001215302,"results":"16","hashOfConfig":"15"},{"size":282,"mtime":1611101050341,"results":"17","hashOfConfig":"15"},{"size":2171,"mtime":1611945711614,"results":"18","hashOfConfig":"15"},{"size":2313,"mtime":1611334939492,"results":"19","hashOfConfig":"15"},{"size":3539,"mtime":1611944593038,"results":"20","hashOfConfig":"15"},{"size":2347,"mtime":1611860763177,"results":"21","hashOfConfig":"15"},{"size":897,"mtime":1611789993287,"results":"22","hashOfConfig":"15"},{"size":380,"mtime":1611012033245,"results":"23","hashOfConfig":"15"},{"size":629,"mtime":1611790007605,"results":"24","hashOfConfig":"15"},{"size":1354,"mtime":1611863788819,"results":"25","hashOfConfig":"15"},{"size":455,"mtime":1611943700843,"results":"26","hashOfConfig":"15"},{"size":1184,"mtime":1611944710970,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"ub2tf9",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/Users/johnstrandt/Dev/weather-app/src/index.js",[],["57","58"],"/Users/johnstrandt/Dev/weather-app/src/reportWebVitals.js",[],"/Users/johnstrandt/Dev/weather-app/src/App.js",[],"/Users/johnstrandt/Dev/weather-app/src/components/CurrentWeather.js",[],"/Users/johnstrandt/Dev/weather-app/src/components/Forecast.js",["59","60","61"],"import React from \"react\";\nimport styled from \"styled-components\";\n\nimport {\n  getCurrentTime,\n  dateAndTime,\n  unixToLocalTime,\n  formatTime,\n} from \"../util/time\";\n\nconst Forecast = ({\n  day,\n  timezone,\n  dew,\n  humidity,\n  precipitation,\n  sunrise,\n  sunset,\n  high,\n  low,\n  uvi,\n  conditions,\n  icon,\n  wind_speed,\n  wind_direction,\n  pressure,\n}) => {\n// pop: probablility of precipitation (chance of rain/snow)  0.6 = 60%\n// pressure units: hPa (same as millibar) - barometric\n// barometric pressure on tv weather reports use inches of mercury \"Hg\n//  33.8639 millibars = 1 inch of mercury\n// samsung s6 Viewport 360 x 640\n  let weekday = unixToLocalTime(day, timezone).substring(0, 3);\n  let _sunrise = formatTime(unixToLocalTime(sunrise, timezone));\n  let _sunset = formatTime(unixToLocalTime(sunset, timezone));\n  let highTemp = Math.round(high);\n  let lowTemp = Math.round(low);\n  let windSpeed = Math.round(wind_speed);\n  let hgPressure = Math.round(pressure / 33.8639);\n  let precip = precipitation * 100;\n\n  return (\n    <Row>\n      <Main>\n        <Flex>\n          <h2>{weekday}</h2>\n          <h1 className={`owi owi-${icon} owi-4x`} alt=\"weather graphic\"></h1>\n        </Flex>\n        <Flex>\n          <p>\n            {highTemp}째/{lowTemp}째\n          </p>\n          <p>{conditions}</p>\n        </Flex>\n      </Main>\n      <Secondary>\n        <div>\n          <p>sunrise {_sunrise}</p>\n          <p>sunset {_sunset}</p>\n          <p>uv index: {uvi}</p>\n        </div>\n\n        <div>\n          <p>Wind {windSpeed}mph</p>\n          <p>direction {wind_direction}째</p>\n          <p>air pressure {hgPressure}\"Hg</p>\n        </div>\n\n        <div>\n          <p>dew point: {dew}째F</p>\n          <p>Humidity {humidity}%</p>\n          <p>precipitation {precip}%</p>\n        </div>\n      </Secondary>\n    </Row>\n  );\n};\n\nconst Row = styled.div`\n  width: 100%;\n  height: 120px;\n  margin: 0.5rem;\n  display: grid;\n  grid-template-columns: 1fr 2fr;\n  p {\n    font-size: 0.8rem;\n  }\n`;\n\nconst Main = styled.div`\n  background-color: #c6c2c2;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n`;\n\nconst Secondary = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n`;\n\nconst Flex = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n`;\n\nexport default Forecast;\n","/Users/johnstrandt/Dev/weather-app/src/pages/Home.js",["62","63","64","65"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector } from \"react-redux\";\n// Components\nimport CurrentWeather from \"../components/CurrentWeather\";\nimport Forecast from \"../components/Forecast\";\nimport DaySummary from \"../components/DaySummary\";\n// time utils\nimport { dateAndTime, unixToLocalTime, getCurrentTime } from \"../util/time\";\n\nconst Home = () => {\n  const location = useSelector((state) => state.location);\n  const current = useSelector((state) => state.current);\n  const daily = useSelector((state) => state.daily);\n  const hourly = useSelector((state) => state.hourly);\n\n\n  console.log(location);\n  // console.log(current);\n  console.log(daily);\n  // console.log(hourly);\n\n  return (\n    <Page>\n      {current ? (\n        <Today>\n          <CurrentWeather\n            city={location.city}\n            country={location.country}\n            timezone={location.timezone}\n            alerts={current.alerts}\n            temp={current.temp}\n            feels_like={current.feels_like}\n            humidity={current.humidity}\n            pressure={current.pressure}\n            dew_point={current.dew_point}\n            conditions={current.weather[0].description}\n            icon={current.weather[0].icon}\n            wind={current.wind_speed}\n            wind_deg={current.wind_deg}\n            visibility={current.visibility}\n          />\n        </Today>\n      ) : (\n        \"\"\n      )}\n      <Week>\n        <Preview>\n          {/*   false was _daily ? ...    */}\n          {daily\n            ? daily.map((day) => (\n                <div key={day.dt}>\n                  <DaySummary\n                    day={day.dt}\n                    timezone={location.timezone}\n                    icon={day.weather[0].icon}\n                    high={day.temp.max}\n                    low={day.temp.min}\n                    conditions={day.weather[0].description}\n                  />\n                </div>\n              ))\n            : \"\"}\n        </Preview>\n        <Details>\n          {false\n            ? daily.map((day) => (\n                <li key={day.dt}>\n                  <Forecast\n                    day={day.dt}\n                    timezone={location.timezone}\n                    dew={day.dew_point}\n                    humidity={day.humidity}\n                    precipitation={day.pop}\n                    sunrise={day.sunrise}\n                    sunset={day.sunset}\n                    high={day.temp.max}\n                    low={day.temp.min}\n                    uvi={day.uvi}\n                    conditions={day.weather[0].description}\n                    icon={day.weather[0].icon}\n                    wind_speed={day.wind_speed}\n                    wind_direction={day.wind_deg}\n                    pressure={day.pressure}\n                  />\n                </li>\n              ))\n            : \"\"}\n        </Details>\n      </Week>\n    </Page>\n  );\n};\n\nconst Page = styled.div`\n  width: 100%;\n  /* max-width: 1200px; */\n  margin: 25px auto 0 auto;\n`;\n\nconst Today = styled.div`\n  margin-bottom: 1rem;\n  color: var(--color-primary);\n  margin: 0 auto;\n  padding: 1rem;\n  max-width: 500px;\n  overflow: hidden;\n`;\n\nconst Week = styled.div`\n  width: 100%;\n  max-width: 500px;\n  margin: 0 auto;\n  margin-bottom: 1rem;\n  ul {\n    list-style: none;\n  }\n`;\n\nconst Preview = styled.div`\n  width: 100%;\n  background-color: var(--color-primary);\n  color: white;\n\n  TableRow:hover{\n    cursor: pointer;\n    background-color: #1573aa;\n  }\n`;\n\nconst Details = styled.ul``;\n\nexport default Home;\n","/Users/johnstrandt/Dev/weather-app/src/components/Nav.js",[],"/Users/johnstrandt/Dev/weather-app/src/actions/weatherAction.js",[],"/Users/johnstrandt/Dev/weather-app/src/api.js",[],"/Users/johnstrandt/Dev/weather-app/src/reducers/weatherReducer.js",[],"/Users/johnstrandt/Dev/weather-app/src/util/time.js",[],"/Users/johnstrandt/Dev/weather-app/src/components/GlobalStyles.js",[],"/Users/johnstrandt/Dev/weather-app/src/components/DaySummary.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":5,"column":3,"nodeType":"72","messageId":"73","endLine":5,"endColumn":17},{"ruleId":"70","severity":1,"message":"74","line":6,"column":3,"nodeType":"72","messageId":"73","endLine":6,"endColumn":14},{"ruleId":"75","severity":1,"message":"76","line":47,"column":11,"nodeType":"77","endLine":47,"endColumn":74},{"ruleId":"70","severity":1,"message":"74","line":9,"column":10,"nodeType":"72","messageId":"73","endLine":9,"endColumn":21},{"ruleId":"70","severity":1,"message":"78","line":9,"column":23,"nodeType":"72","messageId":"73","endLine":9,"endColumn":38},{"ruleId":"70","severity":1,"message":"71","line":9,"column":40,"nodeType":"72","messageId":"73","endLine":9,"endColumn":54},{"ruleId":"70","severity":1,"message":"79","line":15,"column":9,"nodeType":"72","messageId":"73","endLine":15,"endColumn":15},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'getCurrentTime' is defined but never used.","Identifier","unusedVar","'dateAndTime' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'unixToLocalTime' is defined but never used.","'hourly' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]